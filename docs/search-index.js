var searchIndex = JSON.parse('{\
"rrise":{"doc":"","t":[13,13,13,13,13,13,13,13,13,13,17,17,17,17,17,13,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,13,13,13,13,13,13,13,13,17,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,13,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,4,6,6,6,6,6,6,6,6,3,6,6,3,6,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,12,12,0,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,3,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,3,11,11,11,11,11,11,11,11,11,11,5,11,5,5,11,11,5,5,5,5,5,5,11,11,11,11,5,5,5,5,5],"n":["AK_ACP_Error","AK_AlreadyConnected","AK_AudioFileHeaderTooLarge","AK_BankAlreadyLoaded","AK_BankReadError","AK_Busy","AK_Cancelled","AK_CannotAddItseflAsAChild","AK_ChildAlreadyHasAParent","AK_CommandTooLarge","AK_DEFAULT_BANK_IO_PRIORITY","AK_DEFAULT_BANK_THROUGHPUT","AK_DEFAULT_POOL_ID","AK_DEFAULT_PRIORITY","AK_DEFAULT_SWITCH_STATE","AK_DLLCannotLoad","AK_DLLPathNotFound","AK_DataAlignmentError","AK_DataNeeded","AK_DataReady","AK_DeviceNotCompatible","AK_DeviceNotFound","AK_DeviceNotReady","AK_DuplicateUniqueID","AK_ElementAlreadyInList","AK_FALLBACK_ARGUMENTVALUE_ID","AK_Fail","AK_FileFormatMismatch","AK_FileNotFound","AK_FormatNotReady","AK_IDNotFound","AK_INVALID_AUDIO_OBJECT_ID","AK_INVALID_AUX_ID","AK_INVALID_BANK_ID","AK_INVALID_CHANNELMASK","AK_INVALID_DEVICE_ID","AK_INVALID_FILE_ID","AK_INVALID_GAME_OBJECT","AK_INVALID_OUTPUT_DEVICE_ID","AK_INVALID_PIPELINE_ID","AK_INVALID_PLAYING_ID","AK_INVALID_PLUGINID","AK_INVALID_POOL_ID","AK_INVALID_RTPC_ID","AK_INVALID_UNIQUE_ID","AK_InitBankNotLoaded","AK_InsufficientMemory","AK_InvalidCustomPlatformName","AK_InvalidFile","AK_InvalidFloatValue","AK_InvalidID","AK_InvalidInstanceID","AK_InvalidLanguage","AK_InvalidParameter","AK_InvalidStateGroup","AK_InvalidSwitchType","AK_MAX_PRIORITY","AK_MIN_PRIORITY","AK_MaxReached","AK_MemManagerNotInitialized","AK_MustBeVirtualized","AK_NoDataNeeded","AK_NoDataReady","AK_NoDistinctListener","AK_NoJavaVM","AK_NoMoreData","AK_NotCompatible","AK_NotImplemented","AK_OpenSLError","AK_PartialSuccess","AK_PathNoVertices","AK_PathNodeAlreadyInList","AK_PathNodeNotInList","AK_PathNotFound","AK_PathNotPaused","AK_PathNotRunning","AK_PlayingIDNotFound","AK_PluginMediaNotAvailable","AK_PluginNotRegistered","AK_ProcessDone","AK_ProcessNeeded","AK_RejectedByFilter","AK_RenderedFX","AK_ResourceInUse","AK_SOUNDBANK_VERSION","AK_SSEInstructionsNotSupported","AK_StreamMgrNotInitialized","AK_Success","AK_UnknownBankID","AK_UnsupportedChannelConfig","AK_WrongBankVersion","AkAcousticTextureID","AkArgumentValueID","AkAudioObjectID","AkAuxBusID","AkBankID","AkChannelMask","AkCodecID","AkDataCompID","AkDataInterleaveID","AkDataTypeID","AkDeviceID","AkFileID","AkGameObjectID","AkImageSourceID","AkLPFType","AkListenerPosition","AkMemPoolId","AkModulatorID","AkOutputDeviceID","AkPipelineID","AkPitchValue","AkPlayingID","AkPluginID","AkPluginParamID","AkPortNumber","AkPriority","AkRayID","AkResult","AkRtpcID","AkRtpcValue","AkSoundPosition","AkStateGroupID","AkStateID","AkSwitchGroupID","AkSwitchStateID","AkTimeMs","AkTransform","AkTriggerID","AkUniqueID","AkVector","AkVolumeValue","X","Y","Z","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","communication","default","default","eq","fmt","fmt","fmt","from","from","from","from","from","from","from_position","hash","into","into","into","memory_mgr","new","new","orientationFront","orientationTop","position","settings","sound_engine","splat","stream_mgr","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","init","term","init","is_initialized","term","AkCommSettings","AkDeviceSettings","AkInitSettings","AkMemSettings","AkPlatformInitSettings","AkStreamMgrSettings","_address","bEnableAvxSupport","bInitSystemLib","bUseStreamCache","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","commSystem","default","default","default","default","default","default","ePoolAttributes","fTargetAutoStmBufferLength","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hWnd","into","into","into","into","into","into","pIOMemory","pfAllocDevice","pfAllocVM","pfDebugFree","pfDebugMalign","pfDebugMalloc","pfDebugRealloc","pfDebugReallocAligned","pfFree","pfFreeDevice","pfFreeVM","pfInitForThread","pfMalign","pfMalloc","pfRealloc","pfReallocAligned","pfSizeOfMemory","pfTermForThread","pfTotalReservedMemorySize","ports","szAppNetworkName","threadBankManager","threadLEngine","threadMonitor","threadOutputMgr","threadProperties","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uDevicePageSize","uGranularity","uIOMemoryAlignment","uIOMemorySize","uMaxCachePinnedBytes","uMaxConcurrentIO","uMaxSystemAudioObjects","uMemAllocationSizeLimit","uMemoryDebugLevel","uNumRefillsInVoice","uSampleRate","uSchedulerTypeFlags","uVMPageSize","with_plugin_dll_path","PostEvent","add_flags","borrow","borrow_mut","clone","clone_into","flags","fmt","from","from_event_id","from_event_name","init","into","is_initialized","load_bank_by_name","playing_id","post","register_game_obj","render_audio","set_default_listeners","set_position","stop_all","term","to_owned","try_from","try_into","type_id","unregister_all_game_obj","init","init_default_stream_mgr","set_current_language","term_default_stream_mgr"],"q":["rrise","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrise::communication","","rrise::memory_mgr","","","rrise::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrise::sound_engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrise::stream_mgr","","",""],"d":["Generic XMA decoder error.","The stream is already connected to another node.","The file header is too large.","The bank load failed because the bank is already loaded.","Error while reading a bank.","The system is busy and could not process the request.","The requested action was cancelled (not an error).","It is not possible to add itself as its own child.","The child already has a parent.","SDK command is too large to fit in the command queue.","Default bank load I/O priority","Default bank load throughput (1 Mb/ms)","Default pool ID, same as AK_INVALID_POOL_ID","Default sound / I/O priority","Switch selected if no switch has been set yet","Plugin DLL could not be loaded, either because it is not …","Plugin DLL search path could not be found.","A pointer to audio data was not aligned to the platform’…","The consumer needs more.","The provider has available data.","Incompatible Audio device.","The specified device ID does not match with any of the …","Specified ID doesn’t match a valid hardware device: …","Two Wwise objects share the same ID.","The item could not be added because it was already in the …","Fallback argument value ID","The operation failed.","Media file format unexpected","File not found.","Source format not known yet.","The ID was not found.","Invalid audio object ID","Invalid auxiliary bus ID (or no Aux bus ID)","Invalid bank ID","Invalid channel mask","Invalid streaming device ID","Invalid file ID","Invalid game object (may also mean all game objects)","Invalid Device ID","Invalid pipeline ID (for profiling)","Invalid playing ID","Invalid FX ID","Invalid pool ID","Invalid RTPC ID","Invalid unique 32-bit ID","The Init bank was not loaded yet, the sound engine isn’t …","Memory error.","Detecting incompatibility between Custom platform of banks …","An unexpected value causes the file to be invalid.","One parameter has a invalid float value such as NaN, INF …","The ID is invalid.","The InstanceID is invalid.","The language is invalid (applies to the Low-Level I/O).","Something is not within bounds.","The StateGroup is not a valid channel.","Invalid switch type (used with the switch container)","Maximal priority value [0,100]","Minimal priority value [0,100]","The maximum was reached.","The memory manager should have been initialized at this …","Sound was Not Allowed to play.","The consumer does not need more.","The provider does not have available data.","No distinct listener provided for AddOutput","No Java VM provided in AkInitSettings.","No more data is available from the source.","Incompatible formats","This feature is not implemented.","OpenSL returned an error.  Check error log for more …","The operation succeeded partially.","Stuff in vertices before trying to start it","This path is already there.","This path is not there.","This path is not known.","Only a paused path can be resumed.","Only a running path can be paused.","Calling a function with a playing ID that is not known.","Plugin media is not available for effect.","Plugin is not registered.  Make sure to implement a …","The executed routine has finished its execution.","A routine needs to be executed on some CPU.","A play request was rejected due to the MIDI filter …","The effect on the node is rendered.","Resource is in use and cannot be released.","Version of the soundbank reader","The machine does not support SSE instructions (required on …","The stream manager should have been initialized at this …","The operation was successful.","Trying to load a bank using an ID which is not defined.","Channel configuration is not supported in the current …","The bank version is not compatible with the current bank …","","","","","","","","","","","","","","","","Position and orientation of game objects.","","","","","","","","","","","","Standard function call result.","","","Position and orientation of game objects.","","","","","","Position and orientation of game objects.","","","3D vector.","","X Position","Y Position","Z Position","","","","","","","","","","","","","","The nul vector <code>[0, 0, 0]</code>.","Creates an AkTransform at <code>[0, 0, 0]</code> with default …","","","","","Returns the argument unchanged.","In AkVectors, Y is the up component and Z is the forward …","Returns the argument unchanged.","Creates an AkTransform at position <code>p</code> with default …","Creates an AkTransform at position <code>p</code> with default …","Returns the argument unchanged.","Creates an AkTransform at position <code>p</code> with default …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The nul vector <code>[0, 0, 0]</code>.","Creates the default AkTransform.","Orientation of the listener","Top orientation of the listener","Position of the listener","","","The vector <code>[value, value, value]</code>.","","","","","","","","","","","","","","","Initializes the communication module. When this is called, …","Terminates the communication module.","Initialize the default implementation of the Memory …","Query whether the Memory Manager has been successfully …","Terminate the Memory Manager.","Platform-independent initialization settings of …","High-level IO devices initialization settings. \\\\sa","Platform-independent initialization settings of the sound …","Initialization settings for the default implementation of …","\\\\cond !(Web) Platform specific initialization settings \\\\sa …","Stream Manager initialization settings. \\\\sa","","Enables run-time detection of AVX and AVX2 SIMD support in …","Tells if the base console communication library should be …","If true the device attempts to reuse IO buffers that have …","","","","","","","","","","","","","","","","","","","","","","","Select the device of the communication system. By default, …","Gets the default values of the platform-independent …","Gets the default values of the platform-specific …","Obtain the default initialization settings for the default …","Get the default values for the Stream Manager’s settings.","Gets the default values of the platform-independent …","Gets the communication module’s default initialization …","Attributes for I/O memory. Here, specify the allocation …","Targetted automatic stream buffer length (ms). When a …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Handle to the window associated to the audio. Each game …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Pointer for I/O memory allocated by user. Pass NULL if you …","Device page allocation hook.","Virtual page allocation hook.","(Optional) Memory allocation debugging hook. Used for …","(Optional) Memory allocation debugging hook. Used for …","(Optional) Memory allocation debugging hook. Used for …","(Optional) Memory allocation debugging hook. Used for …","(Optional) Memory allocation debugging hook. Used for …","(Optional) Memory allocation hook.","Device page allocation hook.","Virtual page allocation hook.","(Optional) Thread-specific allocator initialization hook.","(Optional) Memory allocation hook.","(Optional) Memory allocation hook.","(Optional) Memory allocation hook.","(Optional) Memory allocation hook.","(Optional) Memory allocation statistics hook.","(Optional) Thread-specific allocator termination hook.","(Optional) Memory allocation statistics hook.","Ports used for communication between the Wwise authoring …","Optional name that will be displayed over network remote …","Bank manager threading properties (its default priority is …","Lower engine threading properties","Monitor threading properties (its default priority is …","Ouput thread threading properties","Scheduler thread properties.","","","","","","","","","","","","","","","","","","","","","","","","Device memory page size. Defaults to 0 which means …","I/O requests granularity (typical bytes/request).","I/O memory alignment. It is passed directly to …","Size of memory for I/O (for automatic streams). It is …","Maximum number of bytes that can be “pinned” using …","Maximum number of transfers that can be sent …","Dictates how many Microsoft Spatial Sound dynamic objects …","When non-zero, limits the total amount of virtual and …","Default 0 disabled. 1 debug enabled. 2 stomp allocator …","Number of refill buffers in voice buffer. 2 == …","Sampling Rate. Default is 48000 Hz. Use 24000hz for low …","Scheduler type flags.","Virtual memory page size. Defaults to 0 which means …","When using DLLs for plugins, specify their path. Leave …","Helper to post events to the sound engine.","Add flags before posting. Bitmask: see AkCallbackType.","","","","","Set flags before posting. Bitmask: see AkCallbackType","","Returns the argument unchanged.","Select an event by id, to play on a given game object.","Select an event by name, to play on a given game object.","Initialize the sound engine.","Calls <code>U::from(self)</code>.","Query whether or not the sound engine has been …","Load a bank synchronously (by Unicode string).","Advanced users only. Specify the playing ID to target with …","Posts the event to the sound engine.","Unregisters a game object.","Processes all commands in the sound engine’s command …","Sets the default set of associated listeners for game …","Sets the position of a game object.","Stops the current content playing associated to the …","Terminates the sound engine.","","","","","Unregister all game objects, or all game objects with a …","Stream Manager factory.","Initializes the default streaming manager, specifying the …","Set the current language once and only once, here. The …","Terminates the default streaming manager."],"i":[1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,1,2,3,1,2,3,1,2,3,1,2,3,0,2,3,1,1,2,3,1,2,2,3,3,3,3,1,1,2,3,0,2,3,3,3,3,0,0,2,0,1,2,3,1,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,4,5,6,7,8,5,9,4,7,6,8,5,9,4,7,6,5,9,4,7,6,5,9,4,7,6,6,8,5,9,4,7,6,7,7,5,9,4,7,6,8,5,9,4,7,6,5,8,5,9,4,7,6,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,5,5,5,5,7,5,9,4,7,6,8,5,9,4,7,6,8,5,9,4,7,6,8,5,9,4,7,6,9,7,7,7,7,7,5,9,9,5,5,7,9,8,0,10,10,10,10,10,10,10,10,10,10,0,10,0,0,10,10,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["akresult",4]],[[["",0]],["akvector",3]],[[["",0]],["aktransform",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[]],[[]],[[["",0],["akresult",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["akvector",3]]],[[]],[[]],[[["into",8,[["akvector",3]]]]],[[["",0],["",0]]],[[]],[[]],[[]],null,[[]],[[]],null,null,null,null,null,[[["",26,[["into",8,[["f32",0]]],["copy",8]]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["akcommsettings",3]],["result",4,[["akresult",4]]]],[[]],[[["akmemsettings",3]],["result",4,[["akresult",4]]]],[[],["bool",0]],[[]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["akplatforminitsettings",3]],[[["",0]],["akmemsettings",3]],[[["",0]],["akstreammgrsettings",3]],[[["",0]],["akdevicesettings",3]],[[["",0]],["akcommsettings",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["asref",8,[["str",0]]]]],null,[[["",0],["akcallbacktype",3]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["postevent",3]],[[["",0],["",0]]],[[["",0],["akcallbacktype",3]],["",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["akgameobjectid",6],["akuniqueid",6]],["postevent",3]],[[["akgameobjectid",6],["str",0]],["postevent",3]],[[["akinitsettings",3],["akplatforminitsettings",3]],["result",4,[["akresult",4]]]],[[]],[[],["bool",0]],[[["asref",8,[["str",0]]]],["result",4,[["akbankid",6],["akresult",4]]]],[[["",0],["akplayingid",6]],["",0]],[[["",0]],["result",4,[["akplayingid",6],["akresult",4]]]],[[["akgameobjectid",6]],["result",4,[["akresult",4]]]],[[["bool",0]],["result",4,[["akresult",4]]]],[[],["result",4,[["akresult",4]]]],[[["akgameobjectid",6],["into",8,[["aksoundposition",6]]]],["result",4,[["akresult",4]]]],[[["option",4,[["akgameobjectid",6]]]]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["result",4,[["akresult",4]]]],[[["akstreammgrsettings",3]],["result",4,[["akresult",4]]]],[[["akstreammgrsettings",3],["akdevicesettings",3],["asref",8,[["str",0]]]],["result",4,[["akresult",4]]]],[[["asref",8,[["str",0]]]],["result",4,[["akresult",4]]]],[[]]],"p":[[4,"AkResult"],[3,"AkVector"],[3,"AkTransform"],[3,"AkStreamMgrSettings"],[3,"AkPlatformInitSettings"],[3,"AkCommSettings"],[3,"AkDeviceSettings"],[3,"AkInitSettings"],[3,"AkMemSettings"],[3,"PostEvent"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};